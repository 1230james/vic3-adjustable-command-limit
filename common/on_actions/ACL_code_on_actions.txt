### Calculate & apply overstacking debuffs
#   Root = attacker or defender country
#   scope:battle = battle
#   scope:attacker = attacking commander
#   scope:defender = defending commander
#   scope:state = location state
on_battle_started = {
    effect = {
        scope:attacker = {   # This logic works from the character info screen but not in here
            set_variable = { # TODO: Fix it or find a workaround
                name  = penalty_mult
                value = ACL_overstacking_penalty_mult
            }
            if = {
                limit  = {
                    NOT = {
                        has_modifier = ACL_overstacking_penalty_modifier
                    }
                    has_trait = ACL_lim_over_25_trait
                    ACL_overstacking_penalty_mult > 0 #var:penalty_mult > 0
                }
                add_modifier = {
                    name       = ACL_overstacking_penalty_modifier
                    multiplier = ACL_overstacking_penalty_mult #var:penalty_mult
                    months     = -1
                }
            }
            remove_variable = penalty_mult
        }
        scope:defender = {
            # TODO
        }
    }
}

### Remove overstacking debuffs on battle end
#   Root = attacker or defender country
#   scope:battle = battle
#   scope:attacker = attacking commander
#   scope:defender = defending commander
#   scope:state = location state
on_battle_ended = {
    effect = {
        scope:attacker = { # TODO: Verify these work and fix if needed (I think they might be broken)
            if = {
                limit = {
                    has_modifier = ACL_overstacking_penalty_modifier
                }
                remove_modifier = ACL_overstacking_penalty_modifier
            }
        }
        scope:defender = {
            if = {
                limit = {
                    has_modifier = ACL_overstacking_penalty_modifier
                }
                remove_modifier = ACL_overstacking_penalty_modifier
            }
        }
    }
}
